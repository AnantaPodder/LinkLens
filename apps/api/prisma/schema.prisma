generator client {
  provider = "prisma-client-js"
  output   = "./generated/"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id           Int     @id(map: "users_pk") @default(autoincrement())
  firstName    String  @map("firstname") @db.VarChar
  lastName     String? @map("lastname") @db.VarChar
  email        String  @unique(map: "users_unique") @map("email") @db.VarChar
  passwordHash String  @map("passwordhash") @db.VarChar
  links        links[]
}

model links {
  id           Int          @id(map: "links_pk")
  url          String       @db.VarChar
  shortenedUrl String       @unique(map: "links_unique") @map("shortenedurl") @db.VarChar
  createdAt    DateTime     @default(now()) @map("createdat") @db.Timestamptz(6)
  deleted      Boolean      @default(false)
  userId       Int          @map("userid")
  link_clicks  linkClicks[]
  users        users        @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "links_users_fk")

  @@index([userId, url, shortenedUrl], map: "links_userid_idx")
}

model linkClicks {
  id         BigInt   @id(map: "link_clicks_pk") @default(autoincrement())
  linkId     Int      @map("linkid")
  visitedAt  DateTime @default(now()) @map("visitedat") @db.Timestamptz(6)
  ipAddress  String   @map("ipaddress") @db.Inet
  userAgent  String   @map("useragent") @db.VarChar
  deviceType String   @map("devicetype") @db.VarChar
  links      links    @relation(fields: [linkId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "link_clicks_links_fk")

  @@unique([ipAddress, linkId, deviceType], map: "link_clicks_unique")
  @@index([linkId])
  @@map("link_clicks")
}
